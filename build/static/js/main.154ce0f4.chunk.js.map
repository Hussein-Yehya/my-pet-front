{"version":3,"sources":["pages/Home/components/Contacts/Item/index.js","helpers/urls.js","pages/Home/components/Contacts/index.js","pages/Home/index.js","components/InputGroup/index.js","helpers/select.js","pages/Pets/Create/index.js","pages/Pets/Info/index.js","pages/Pets/Edit/index.js","pages/login/index.js","pages/Users/Create/index.js","Routes.js","components/Menu/index.js","App.js","serviceWorker.js","index.js"],"names":["ContactItem","name","age","breed","urlImage","id","className","src","alt","to","Contacts","contacts","map","contact","index","description","key","Home","state","fetch","then","res","json","data","setState","catch","console","log","this","Component","InputGroup","field","label","value","onChange","type","htmlFor","checked","options","coatLengthOptions","petRecommendedToOptions","petTypeOptions","genreOptions","Select","ContactForm","submitHandler","e","preventDefault","form","method","headers","body","JSON","stringify","redirect","error","changeHandler","event","a","persist","target","handleInputs","bloodType","color","disease","vaccinated","item","handleSelectChange","selectedOption","coatLength","petRecommendedTo","petSize","petType","genre","onSubmit","InfoPage","props","deleteContact","match","params","handleOptions","listOptions","find","info","getContactById","onClick","ContactEdit","response","Login","store","status","invalidUser","email","password","class","role","CreateUser","undefined","address","city","district","street","number","complements","country","Routes","exact","path","component","Menu","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.154ce0f4.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './index.css';\nimport { INFO, EDIT } from '../../../../../helpers/urls';\n\nconst ContactItem = ({ name, age, breed, urlImage, id }) => {\n  const componentClassName = 'contact-item';\n\n  return (\n    <div className={`${componentClassName} card mb-4 shadow-sm`}>\n      <img src={urlImage} alt=\"\" className={`${componentClassName}__image`} />\n\n      <div className=\"card-body\">\n        <p className=\"card-text\">\n          <b>Nome:</b> {name}\n          <b> Idade: </b> {age}\n        </p>\n\n        <p className=\"card-text\">\n          <b> Raça: </b> {breed}\n        </p>\n        <Link to={`${INFO}/${id}`}>Ver mais</Link>\n\n        <Link to={`${EDIT}/${id}`}> Editar </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactItem;\n","export const HOME = '/';\nexport const INFO = '/info';\nexport const CREATE = '/create';\nexport const EDIT = '/edit';\nexport const LOGIN = '/login';\nexport const LOGOUT = '/login';\nexport const CREATE_USER = '/create/user';\n","import React from 'react';\nimport ContactItem from './Item';\nimport './index.css';\n\nconst Contacts = ({ contacts }) => {\n  return (\n    <div>\n      <div className=\"c-title-box\">\n        <center>\n          <h1>\n            <strong>My Pet </strong>\n          </h1>\n        </center>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"row\">\n          {contacts.map((contact, index) => {\n            const { name, age, breed, urlImage, id, description } = contact;\n\n            return (\n              <div className=\"col-md-4\" key={index}>\n                <ContactItem\n                  name={name}\n                  age={age}\n                  breed={breed}\n                  urlImage={urlImage}\n                  id={id}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Contacts from './components/Contacts';\nimport { CREATE } from '../../helpers/urls';\n\nclass Home extends Component {\n  state = {\n    contacts: []\n  };\n\n  componentDidMount() {\n    fetch('https://ancient-fortress-81160.herokuapp.com/api/contacts')\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ contacts: data });\n      })\n      .catch(console.log);\n  }\n\n  render() {\n    return (\n      <>\n        <Contacts contacts={this.state.contacts} />\n      </>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\n\nconst InputGroup = ({\n  field,\n  label,\n  value,\n  onChange,\n  className,\n  type = 'text'\n}) => {\n  return (\n    <div className={`form-field ${className}`}>\n      <label className=\"label\" htmlFor={field}>\n        {label}\n      </label>\n\n      <input\n        className=\"input-text js-input\"\n        name={field}\n        type={type}\n        value={value}\n        checked={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default InputGroup;\n","import { Select } from 'semantic-ui-react';\n\nexport const options = [\n    { value: 'SMALL', label: 'Pequeno' },\n    { value: 'MEDIUM', label: 'Médio' },\n    { value: 'LARGE', label: 'Grande' },\n    { value: 'XL', label: 'Grandão' }\n  ];\n  \n  export const coatLengthOptions = [\n    { value: 'HAIRLESS', label: 'Sem pelagem' },\n    { value: 'SHORT', label: 'Pequeno' },\n    { value: 'MEDIUM', label: 'Médio' },\n    { value: 'LONG', label: 'Longo' }\n  ];\n  \n  export const petRecommendedToOptions = [\n    { value: 'KIDS', label: 'Crianças' },\n    { value: 'OLD_MAN', label: 'Idosos' },\n    { value: 'DEFICIENT', label: 'Pessoas Especiais' }\n  ];\n  \n  export const petTypeOptions = [\n    { value: 'CAT', label: 'Felino' },\n    { value: 'DOG', label: 'Canino' }\n  ];\n  \n  export const genreOptions = [\n    { value: 'M', label: 'Macho' },\n    { value: 'F', label: 'Fêmea' }\n  ];\n\n  export default Select;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Select from 'react-select';\n\nimport { HOME } from '../../../helpers/urls';\nimport './index.css';\nimport InputGroup from '../../../components/InputGroup';\nimport {\n  options,\n  coatLengthOptions,\n  petRecommendedToOptions,\n  petTypeOptions,\n  genreOptions\n} from '../../../helpers/select';\n\nclass ContactForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      form: {\n        name: '',\n        age: '',\n        breed: '',\n        description: '',\n        urlImage: '',\n        bloodType: '',\n        coatLength: 'HAIRLESS',\n        color: '',\n        petRecommendedTo: 'KIDS',\n        petSize: 'SMALL',\n        disease: false,\n        vaccinated: false,\n        petType: 'CAT',\n        genre: 'M'\n      },\n      selectedOption: {\n        petSize: options[0],\n        coatLength: coatLengthOptions[0],\n        petRecommendedTo: petRecommendedToOptions[0],\n        petType: petTypeOptions[0],\n        genre: genreOptions[0]\n      },\n      redirect: false\n    };\n  }\n\n  submitHandler = e => {\n    e.preventDefault();\n\n    console.log(this.state.form);\n    fetch('https://ancient-fortress-81160.herokuapp.com/api/contacts', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(this.state.form)\n    })\n      .then(() => this.setState({ redirect: true }))\n      .catch(error => console.log(error));\n  };\n\n  changeHandler = async event => {\n    event.persist();\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    const { form } = this.state;\n\n    form[name] = value;\n\n    await this.setState(form);\n  };\n\n  handleInputs = () => {\n    const { form } = this.state;\n\n    const FIELDS = [\n      {\n        label: 'Nome',\n        field: 'name',\n        value: form.name,\n        type: 'text'\n      },\n      {\n        label: 'Idade',\n        field: 'age',\n        value: form.age,\n        type: 'number'\n      },\n      {\n        label: 'Raça',\n        field: 'breed',\n        value: form.breed,\n        type: 'text'\n      },\n      {\n        label: 'Link da foto',\n        field: 'urlImage',\n        value: form.urlImage,\n        type: 'text'\n      },\n      {\n        label: 'Tipo Sanguíneo',\n        field: 'bloodType',\n        value: form.bloodType,\n        type: 'text'\n      },\n      {\n        label: 'Cor',\n        field: 'color',\n        value: form.color,\n        type: 'text'\n      },\n      {\n        label: 'Possui Doença',\n        field: 'disease',\n        value: form.disease,\n        type: 'checkbox'\n      },\n      {\n        label: 'Vacinado',\n        field: 'vaccinated',\n        value: form.vaccinated,\n        type: 'checkbox'\n      }\n    ];\n\n    return FIELDS.map((item, index) => (\n      <InputGroup\n        key={index}\n        className=\"col-xs-12 col-lg-4\"\n        field={item.field}\n        label={item.label}\n        value={item.value}\n        type={item.type}\n        onChange={this.changeHandler}\n      />\n    ));\n  };\n\n  handleSelectChange = async (selectedOption, field) => {\n    await this.setState(\n      { form: { ...this.state.form, [field]: selectedOption.value } },\n      () => console.log(`Option selected:`, selectedOption)\n    );\n\n    await this.setState({\n      selectedOption: {\n        ...this.state.selectedOption,\n        [field]: selectedOption\n      }\n    });\n\n    console.log(this.state);\n  };\n\n  render() {\n    const { redirect, form, selectedOption } = this.state;\n\n    if (redirect) {\n      return <Redirect to={HOME} />;\n    }\n\n    return (\n      <section className=\"get-in-touch\">\n        <form\n          className=\"contact-form row\"\n          onSubmit={e => this.submitHandler(e)}\n        >\n          <div className=\"col-12 c-info-box\">\n            <h1>\n              Criar um novo <strong> Pet</strong>\n            </h1>\n          </div>\n\n          {this.handleInputs()}\n\n          <div className=\"form-field col-12 col-lg-4\">\n            <label className=\"label\">Pelagem</label>\n            <Select\n              value={selectedOption.coatLength}\n              onChange={value => this.handleSelectChange(value, 'coatLength')}\n              options={coatLengthOptions}\n            />\n          </div>\n\n          <div className=\"form-field col-12 col-lg-4\">\n            <label className=\"label\">Porte</label>\n            <Select\n              value={selectedOption.petSize}\n              onChange={value => this.handleSelectChange(value, 'petSize')}\n              options={options}\n            />\n          </div>\n\n          <div className=\"form-field col-12 col-lg-4\">\n            <label className=\"label\">Recomendado Para</label>\n            <Select\n              value={selectedOption.petRecommendedTo}\n              onChange={value =>\n                this.handleSelectChange(value, 'petRecommendedTo')\n              }\n              options={petRecommendedToOptions}\n            />\n          </div>\n\n          <div className=\"form-field col-xs-12 col-lg-4\">\n            <label className=\"label\">Tipo Pet</label>\n            <Select\n              value={selectedOption.petType}\n              onChange={value => this.handleSelectChange(value, 'petType')}\n              options={petTypeOptions}\n            />\n          </div>\n\n          <div className=\"form-field col-xs-12 col-lg-4\">\n            <label className=\"label\">Gênero</label>\n            <Select\n              value={selectedOption.genre}\n              onChange={value => this.handleSelectChange(value, 'genre')}\n              options={genreOptions}\n            />\n          </div>\n\n          <div className=\"form-field col-xs-12 col-lg-12\">\n            <label className=\"label c-label-desc\">Sobre o pet</label>\n            <textarea\n              className=\"form-field input-text js-input c-description-info\"\n              name=\"description\"\n              type=\"textarea\"\n              value={form.description}\n              onChange={this.changeHandler}\n            />\n          </div>\n\n          <div className=\"form-field col-12 c-submit-box\">\n            <button type=\"submit\" className=\"submit-btn\">\n              Salvar\n            </button>\n          </div>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React, { Component } from 'react';\n\nimport { HOME } from '../../../helpers/urls';\nimport { Redirect } from 'react-router-dom';\n\nimport './index.css';\n\nimport {\n  options,\n  coatLengthOptions,\n  petRecommendedToOptions,\n  genreOptions\n} from '../../../helpers/select';\n\nconst componentClassName = 'contact-info';\n\nclass InfoPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      info: {\n        name: '',\n        age: '',\n        breed: '',\n        description: '',\n        urlImage: '',\n        bloodType: '',\n        coatLength: '',\n        color: '',\n        petRecommendedTo: '',\n        petSize: '',\n        disease: false,\n        vaccinated: false,\n        petType: '',\n        genre: ''\n      },\n      redirect: false\n    };\n  }\n\n  componentDidMount() {\n    this.getContactById();\n  }\n\n  getContactById() {\n    console.log('use');\n    const { id } = this.props.match.params;\n\n    fetch(`https://ancient-fortress-81160.herokuapp.com/api/contacts/${id}`)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ info: data });\n      })\n      .catch(console.log);\n  }\n\n  deleteContact = () => {\n    const { id } = this.props.match.params;\n    fetch(`https://ancient-fortress-81160.herokuapp.com/api/contacts/${id}`, {\n      method: 'DELETE'\n    })\n      .then(() => this.setState({ redirect: true }))\n      .catch(error => console.log(error));\n  };\n\n  handleOptions = (value, listOptions) => {\n    if (!value) {\n      return {\n        value: '',\n        label: ''\n      };\n    }\n\n    return listOptions.find(item => item.value === value);\n  };\n\n  render() {\n    const { info, redirect } = this.state;\n\n    if (redirect) {\n      return <Redirect to={HOME} />;\n    }\n\n    return (\n      <section className=\"container\">\n        <div className={`${componentClassName}`}></div>\n\n        <div className=\"col-12 c-detail-box\">\n          <img\n            src={info.urlImage}\n            alt=\"\"\n            className={`${componentClassName}__image`}\n          />\n\n          <h1>\n            {info.petType === 'CAT' ? 'Miaau ' : 'Au Au '}eu sou\n            {info.genre === 'M' ? ' o ' : ' a '} <strong>{info.name} !</strong>\n          </h1>\n        </div>\n\n        <div className=\"col-12 row\">\n          <div className=\"col-4\">\n            <strong>Raça: </strong>\n            {info.breed}\n          </div>\n\n          <div className=\"col-4\">\n            <strong>Idade: </strong>\n            {info.age > 1 ? info.age + ' anos ' : info.age + ' ano '}\n          </div>\n\n          <div className=\"col-4\">\n            <strong>Gênero: </strong>\n            {this.handleOptions(info.genre, genreOptions).label}\n          </div>\n\n          <div className=\"col-4\">\n            <strong>Cor: </strong>\n            {info.color}\n          </div>\n\n          <div className=\"col-4\">\n            <strong>Possui Doença: </strong>\n            {info.disease === true ? 'Sim' : 'Não'}\n          </div>\n\n          <div className=\"col-4\">\n            <strong>Tipo Sanguíneo: </strong>\n            {info.bloodType}\n          </div>\n\n          <div className=\"col-4\">\n            <strong>Recomendado para: </strong>\n            {\n              this.handleOptions(info.petRecommendedTo, petRecommendedToOptions)\n                .label\n            }\n          </div>\n\n          <div className=\"col-4\">\n            <strong>Vacinado: </strong>\n            {info.vaccinated === true ? 'Sim' : 'Não'}\n          </div>\n\n          <div className=\"col-4\">\n            <strong>Pelagem: </strong>\n            {this.handleOptions(info.coatLength, coatLengthOptions).label}\n          </div>\n\n          <div className=\"col-4\">\n            <strong>Porte: </strong>\n            {this.handleOptions(info.petSize, options).label}\n          </div>\n\n          <div className=\"col-12 c-description-info\">\n            <strong>Sobre o pet: </strong>\n            {info.description}\n          </div>\n\n          <div className=\"container\">\n            <div className=\"col-12 row\">\n              <button\n                type=\"submit\"\n                onClick={this.deleteContact}\n                className=\"btn btn-danger\"\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default InfoPage;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Select from 'react-select';\n\nimport { HOME } from '../../../helpers/urls';\nimport './index.css';\nimport InputGroup from '../../../components/InputGroup';\n\nimport {\n  options,\n  coatLengthOptions,\n  petRecommendedToOptions,\n  petTypeOptions,\n  genreOptions\n} from '../../../helpers/select';\n\nconst componentClassName = 'contact-info';\n\nclass ContactEdit extends Component {\n  constructor() {\n    super();\n    this.state = {\n      form: {\n        name: '',\n        age: '',\n        breed: '',\n        description: '',\n        urlImage: '',\n        bloodType: '',\n        coatLength: '',\n        color: '',\n        petRecommendedTo: '',\n        petSize: '',\n        disease: false,\n        vaccinated: false,\n        petType: '',\n        genre: ''\n      },\n      selectedOption: {\n        petSize: options[0],\n        coatLength: coatLengthOptions[0],\n        petRecommendedTo: petRecommendedToOptions[0],\n        petType: petTypeOptions[0],\n        genre: genreOptions[0]\n      },\n      redirect: false\n    };\n  }\n\n  submitHandler = e => {\n    e.preventDefault();\n\n    console.log(this.state.form);\n    fetch('https://ancient-fortress-81160.herokuapp.com/api/contacts', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(this.state.form)\n    })\n      .then(() => this.setState({ redirect: true }))\n      .catch(error => console.log(error));\n  };\n\n  changeHandler = async event => {\n    event.persist();\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    const { form } = this.state;\n\n    form[name] = value;\n\n    await this.setState(form);\n  };\n\n  handleInputs = () => {\n    const { form } = this.state;\n\n    const FIELDS = [\n      {\n        label: 'Nome',\n        field: 'name',\n        value: form.name,\n        type: 'text'\n      },\n      {\n        label: 'Idade',\n        field: 'age',\n        value: form.age,\n        type: 'number'\n      },\n      {\n        label: 'Raça',\n        field: 'breed',\n        value: form.breed,\n        type: 'text'\n      },\n      {\n        label: 'Tipo Sanguíneo',\n        field: 'bloodType',\n        value: form.bloodType,\n        type: 'text'\n      },\n      {\n        label: 'Cor',\n        field: 'color',\n        value: form.color,\n        type: 'text'\n      },\n      {\n        label: 'Link da foto',\n        field: 'urlImage',\n        value: form.urlImage,\n        type: 'text',\n        className: 'c-image-url'\n      },\n      {\n        label: 'Possui Doença',\n        field: 'disease',\n        value: form.disease,\n        type: 'checkbox'\n      },\n      {\n        label: 'Vacinado',\n        field: 'vaccinated',\n        value: form.vaccinated,\n        type: 'checkbox'\n      }\n    ];\n\n    return FIELDS.map((item, index) => (\n      <InputGroup\n        key={index}\n        className={`${item.className ? item.className : ''} col-xs-12 col-lg-4`}\n        field={item.field}\n        label={item.label}\n        value={item.value}\n        type={item.type}\n        onChange={this.changeHandler}\n      />\n    ));\n  };\n\n  handleSelectChange = async (selectedOption, field) => {\n    await this.setState(\n      { form: { ...this.state.form, [field]: selectedOption.value } },\n      () => console.log(`Option selected:`, selectedOption)\n    );\n\n    await this.setState({\n      selectedOption: {\n        ...this.state.selectedOption,\n        [field]: selectedOption\n      }\n    });\n\n    console.log(this.state);\n  };\n\n  async componentDidMount() {\n    try {\n      const id = this.props.match.params.id;\n\n      const response = await fetch(\n        `https://ancient-fortress-81160.herokuapp.com/api/contacts/${id}`,\n        {\n          method: 'GET',\n          headers: { 'Content-Type': 'application/json' }\n        }\n      );\n\n      const data = await response.json();\n\n      console.log(data);\n\n      const coatLength = await coatLengthOptions.find(\n        item => item.value === data.coatLength\n      );\n      const petSize = await options.find(item => item.value === data.petSize);\n      const petRecommendedTo = await petRecommendedToOptions.find(\n        item => item.value === data.petRecommendedTo\n      );\n\n      const petType = await petTypeOptions.find(\n        item => item.value === data.petType\n      );\n\n      const genre = await genreOptions.find(item => item.value === data.genre);\n\n      await this.setState({\n        form: { ...this.state.form, ...data, id },\n        selectedOption: {\n          coatLength,\n          petSize,\n          petRecommendedTo,\n          petType,\n          genre\n        }\n      });\n    } catch {\n      console.error('Deu Ruim');\n    }\n  }\n\n  render() {\n    const { redirect, form, selectedOption } = this.state;\n\n    if (redirect) {\n      return <Redirect to={HOME} />;\n    }\n\n    return (\n      <section className=\"get-in-touch\">\n        <form\n          className=\"contact-form row\"\n          onSubmit={e => this.submitHandler(e)}\n        >\n          <div className=\"col-12 c-info-box\">\n            <img\n              src={form.urlImage}\n              alt=\"\"\n              className={`${componentClassName}__image`}\n            />\n\n            <h1>\n              {form.petType === 'CAT' ? 'Miaau ' : 'Au Au '}eu sou\n              {form.genre === 'M' ? ' o ' : ' a '} <strong>{form.name}</strong>!\n            </h1>\n          </div>\n\n          {this.handleInputs()}\n\n          <div className=\"form-field col-12 col-lg-4\">\n            <label className=\"label\">Pelagem</label>\n            <Select\n              value={selectedOption.coatLength}\n              onChange={value => this.handleSelectChange(value, 'coatLength')}\n              options={coatLengthOptions}\n            />\n          </div>\n\n          <div className=\"form-field col-12 col-lg-4\">\n            <label className=\"label\">Porte</label>\n            <Select\n              value={selectedOption.petSize}\n              onChange={value => this.handleSelectChange(value, 'petSize')}\n              options={options}\n            />\n          </div>\n\n          <div className=\"form-field col-12 col-lg-4\">\n            <label className=\"label\">Recomendado Para</label>\n            <Select\n              value={selectedOption.petRecommendedTo}\n              onChange={value =>\n                this.handleSelectChange(value, 'petRecommendedTo')\n              }\n              options={petRecommendedToOptions}\n            />\n          </div>\n\n          <div className=\"form-field col-xs-12 col-lg-4\">\n            <label className=\"label\">Tipo Pet</label>\n            <Select\n              value={selectedOption.petType}\n              onChange={value => this.handleSelectChange(value, 'petType')}\n              options={petTypeOptions}\n            />\n          </div>\n\n          <div className=\"form-field col-xs-12 col-lg-4\">\n            <label className=\"label\">Gênero</label>\n            <Select\n              value={selectedOption.genre}\n              onChange={value => this.handleSelectChange(value, 'genre')}\n              options={genreOptions}\n            />\n          </div>\n\n          <div className=\"form-field col-xs-12 col-lg-12\">\n            <label className=\"label c-label-desc\">Sobre o pet</label>\n            <textarea\n              className=\"input-text js-input c-description-info\"\n              name=\"description\"\n              type=\"textarea\"\n              value={form.description}\n              onChange={this.changeHandler}\n            />\n          </div>\n\n          <div className=\"form-field col-12 c-submit-box\">\n            <button type=\"submit\" className=\"submit-btn\">\n              Salvar\n            </button>\n          </div>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default ContactEdit;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { HOME } from '../../helpers/urls';\nimport './index.css';\nimport InputGroup from '../../components/InputGroup';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      form: {\n        email: '',\n        password: ''\n      },\n      redirect: false\n    };\n  }\n\n  changeHandler = e => {\n    e.persist();\n    let store = this.state;\n    store.form[e.target.name] = e.target.value;\n\n    this.setState(store);\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n\n    console.log(this.state.form);\n    fetch('https://ancient-fortress-81160.herokuapp.com/api/users/login', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(this.state.form)\n    })\n      .then(response => {\n        if (response.status === 200) {\n          response.json().then(data => {\n            console.log(data);\n            this.setState({ redirect: true });\n          });\n        } else {\n          this.setState({ invalidUser: true });\n        }\n      })\n      .catch(error => console.log(error));\n  };\n\n  handleInputs = () => {\n    const { form } = this.state;\n\n    const FIELDS = [\n      {\n        label: 'Email',\n        field: 'email',\n        value: form.email,\n        type: 'email'\n      },\n      {\n        label: 'Senha',\n        field: 'password',\n        value: form.password,\n        type: 'password'\n      }\n    ];\n\n    return FIELDS.map((item, index) => (\n      <InputGroup\n        key={index}\n        className=\"col-xs-12 col-lg-12\"\n        field={item.field}\n        label={item.label}\n        value={item.value}\n        type={item.type}\n        onChange={this.changeHandler}\n      />\n    ));\n  };\n\n  render() {\n    const { redirect, invalidUser } = this.state;\n\n    if (redirect) {\n      return <Redirect to={HOME} />;\n    }\n\n    return (\n      <section className=\"get-in-touch login\">\n        {invalidUser ? (\n          <div class=\"col-lg-12 alert alert-danger\" role=\"alert\">\n            Usuário Invalido\n          </div>\n        ) : null}\n        <form\n          className=\"contact-form row\"\n          onSubmit={e => this.submitHandler(e)}\n        >\n          {this.handleInputs()}\n\n          <div className=\"form-field col-lg-12\">\n            <button type=\"submit\" className=\"submit-btn\">\n              Logar\n            </button>\n          </div>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { HOME } from '../../../helpers/urls';\nimport './index.css';\nimport InputGroup from '../../../components/InputGroup';\n\nclass CreateUser extends Component {\n  constructor() {\n    super();\n    this.state = {\n      form: {\n        name: '',\n        email: '',\n        password: '',\n        address: {\n          country: 'Brasil',\n          state: '',\n          district: '',\n          city: '',\n          street: '',\n          number: '',\n          complements: ''\n        }\n      },\n      redirect: false\n    };\n  }\n\n  submitHandler = e => {\n    e.preventDefault();\n\n    console.log(this.state.form);\n    fetch('https://ancient-fortress-81160.herokuapp.com/api/users', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(this.state.form)\n    })\n      .then(() => this.setState({ redirect: true }))\n      .catch(error => console.log(error));\n  };\n\n  changeHandler = async event => {\n    event.persist();\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    const { form } = this.state;\n\n    if (form[name] !== undefined) {\n      form[name] = value;\n    } else {\n      form.address[name] = value;\n    }\n\n    await this.setState(form);\n  };\n\n  handleInputs = () => {\n    const { form } = this.state;\n\n    const FIELDS = [\n      {\n        label: 'Nome',\n        field: 'name',\n        value: form.name,\n        type: 'text'\n      },\n      {\n        label: 'E-mail',\n        field: 'email',\n        value: form.email,\n        type: 'text'\n      },\n      {\n        label: 'Senha',\n        field: 'password',\n        value: form.password,\n        type: 'password'\n      },\n      {\n        label: 'Estado',\n        field: 'state',\n        value: form.address.state,\n        type: 'text'\n      },\n      {\n        label: 'Cidade',\n        field: 'city',\n        value: form.address.city,\n        type: 'text'\n      },\n      {\n        label: 'Bairro',\n        field: 'district',\n        value: form.address.district,\n        type: 'text'\n      },\n      {\n        label: 'Rua',\n        field: 'street',\n        value: form.address.street,\n        type: 'text'\n      },\n      {\n        label: 'Número',\n        field: 'number',\n        value: form.address.number,\n        type: 'text'\n      },\n      {\n        label: 'Complemento',\n        field: 'complements',\n        value: form.address.complements,\n        type: 'text'\n      }\n    ];\n\n    return FIELDS.map((item, index) => (\n      <InputGroup\n        key={index}\n        className=\"col-xs-12 col-lg-4\"\n        field={item.field}\n        label={item.label}\n        value={item.value}\n        type={item.type}\n        onChange={this.changeHandler}\n      />\n    ));\n  };\n\n  render() {\n    const { form } = this.state;\n\n    // if (redirect) {\n    //   return <Redirect to={HOME} />;\n    // }\n\n    return (\n      <section className=\"get-in-touch\">\n        <form\n          className=\"contact-form row\"\n          onSubmit={e => this.submitHandler(e)}\n        >\n          <div className=\"col-12 c-info-box\">\n            <h1>\n              Criar uma nova <strong> Conta</strong>\n            </h1>\n          </div>\n\n          {this.handleInputs()}\n\n          <div className=\"form-field col-12 c-submit-box\">\n            <button type=\"submit\" className=\"submit-btn\">\n              Cadastrar\n            </button>\n          </div>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default CreateUser;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport ContactForm from './pages/Pets/Create';\nimport InfoPage from './pages/Pets/Info';\nimport { INFO, HOME, CREATE, EDIT, LOGIN, CREATE_USER } from './helpers/urls';\nimport ContactEdit from './pages/Pets/Edit';\nimport Login from './pages/login';\nimport CreateUser from './pages/Users/Create';\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path={HOME} component={Home} />\n      <Route exact path={`${INFO}/:id`} component={InfoPage} />\n      <Route exact path={CREATE} component={ContactForm} />\n      <Route exact path={`${EDIT}/:id`} component={ContactEdit} />\n      <Route exact path={LOGIN} component={Login} />\n      <Route exact path={CREATE_USER} component={CreateUser} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CREATE, HOME, LOGIN, LOGOUT, CREATE_USER } from '../../helpers/urls';\n\nconst Menu = () => {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light \">\n        <Link className=\"navbar-brand\" to=\"/\">\n          My Pet\n        </Link>\n\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item active\">\n              <Link className=\"nav-link\" to={HOME}>\n                 início \n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to={CREATE}>\n                 Criar Pets \n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to={CREATE_USER}>\n                Criar Usuário{' '}\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to={LOGIN}>\n                Entrar\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to={LOGOUT}>\n                 Sair \n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Menu;\n","import React from 'react';\nimport Routes from './Routes';\nimport Menu from './components/Menu';\n\nconst App = () => {\n  return (\n    <>\n      <Menu />\n      <Routes />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}