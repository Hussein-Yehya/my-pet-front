{"version":3,"sources":["pages/Home/components/Pets/Item/index.tsx","helpers/urls.ts","pages/Home/components/Pets/index.tsx","components/Search/index.tsx","pages/Home/index.tsx","components/InputGroup/index.tsx","helpers/select.ts","pages/Pets/Create/index.tsx","pages/Pets/Info/index.tsx","pages/Pets/Edit/index.tsx","pages/Login/index.tsx","pages/Users/Create/index.tsx","pages/Users/List/Users/index.tsx","pages/Users/List/index.tsx","pages/Users/Edit/index.tsx","Routes.tsx","components/Menu/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["PetItem","name","age","breed","urlImage","id","className","src","alt","to","Pets","pets","map","pet","index","key","Search","inputValue","inputChange","onSubmit","showButton","type","placeholder","aria-label","onChange","value","Home","state","search","handleSearchChange","event","target","setState","getContactByName","getContactAll","handleSearchSubmit","preventDefault","this","fetch","then","res","json","data","catch","console","log","Component","InputGroup","field","label","checked","htmlFor","options","coatLengthOptions","petRecommendedToOptions","petTypeOptions","genreOptions","ContactForm","form","description","bloodType","coatLength","color","petRecommendedTo","petSize","disease","vaccinated","petType","genre","user","selectedOption","redirect","submitHandler","e","method","headers","body","JSON","stringify","error","changeHandler","a","persist","handleInputs","item","handleSelectChange","InfoPage","props","deleteContact","match","params","handleOptions","listOptions","defaultValue","find","info","getContactById","onClick","ContactEdit","response","Login","email","password","invalidUser","store","status","role","CreateUser","address","country","district","city","street","number","complements","undefined","disableUser","Users","users","scope","userType","UserManagement","UserEdit","Routes","exact","path","component","Menu","useState","isMenuMobileOpen","setIsMenuMobileOpen","data-toggle","data-target","aria-controls","aria-expanded","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7cfd0d39.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './index.css';\nimport { INFO, EDIT } from '../../../../../helpers/urls';\nimport { PetInterface } from '../../../../../Interfaces/Pets/index.interface';\n\nconst PetItem = ({ name, age, breed, urlImage, id }: PetInterface) => {\n  const componentClassName = 'contact-item';\n\n  return (\n    <div className={`${componentClassName} card mb-4 shadow-sm`}>\n      <img src={urlImage} alt=\"\" className={`${componentClassName}__image`} />\n\n      <div className=\"card-body\">\n        <p className=\"card-text\">\n          <b>Nome:</b> {name}\n          <b> Idade: </b> {age}\n        </p>\n\n        <p className=\"card-text\">\n          <b> Raça: </b> {breed}\n        </p>\n        <Link to={`${INFO}/${id}`}>Ver mais</Link>\n\n        <Link to={`${EDIT}/${id}`}> Editar </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default PetItem;\n","export const HOME = '/';\nexport const INFO = '/info';\nexport const CREATE = '/create';\nexport const EDIT = '/edit';\nexport const LOGIN = '/login';\nexport const LOGOUT = '/login';\nexport const CREATE_USER = '/create/user';\nexport const USER_MANAGEMENT = '/management/user';\nexport const EDIT_USER = '/edit/user';\n","import React from 'react';\nimport PetItem from './Item';\nimport './index.css';\nimport { PetInterface } from '../../../../Interfaces/Pets/index.interface';\n\ninterface Props {\n  pets: PetInterface[];\n}\n\nconst Pets = ({ pets }: Props) => {\n  return (\n    <div>\n      <div className=\"c-title-box\"></div>\n\n      <div className=\"container\">\n        <div className=\"row\">\n          {pets &&\n            pets.map((pet, index) => {\n              const { name, age, breed, urlImage, id } = pet;\n\n              return (\n                <div className=\"col-md-4\" key={index}>\n                  <PetItem\n                    name={name}\n                    age={age}\n                    breed={breed}\n                    urlImage={urlImage}\n                    id={id}\n                  />\n                </div>\n              );\n            })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Pets;\n","import React from 'react';\nimport './index.css';\n\ninterface Props {\n  inputValue: string;\n  inputChange: (event: any) => void;\n  onSubmit: (event: any) => void;\n  showButton?: boolean;\n}\n\nconst Search = ({\n  inputValue,\n  inputChange,\n  onSubmit,\n  showButton = true\n}: Props) => {\n  return (\n    <form className=\"form-inline my-2 my-lg-0 container\" onSubmit={onSubmit}>\n      <input\n        className=\"form-control mr-sm-2 search\"\n        type=\"search\"\n        placeholder=\"Pesquisar por apelido...\"\n        aria-label=\"Search\"\n        onChange={inputChange}\n        value={inputValue}\n      />\n\n      {showButton ? (\n        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">\n          Search\n        </button>\n      ) : null}\n    </form>\n  );\n};\n\nexport default Search;\n","import React, { Component } from 'react';\n\nimport Pets from './components/Pets';\nimport Search from 'components/Search';\n\nclass Home extends Component {\n  state = {\n    pets: [],\n    search: {\n      inputValue: ''\n    }\n  };\n\n  componentDidMount() {\n    this.getContactAll();\n  }\n\n  getContactAll() {\n    fetch('https://ancient-fortress-81160.herokuapp.com/api/contacts')\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ pets: data });\n      })\n      .catch(console.log);\n  }\n\n  getContactByName(name: string) {\n    fetch(\n      `https://ancient-fortress-81160.herokuapp.com/api/contacts/name/${name}`\n    )\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ pets: data });\n      })\n      .catch(console.log);\n  }\n\n  handleSearchChange = (event: any) => {\n    const name = event.target.value;\n    this.setState({ search: { inputValue: name } });\n\n    if (!name) {\n      this.getContactAll();\n    } else {\n      this.getContactByName(name);\n    }\n  };\n\n  handleSearchSubmit = (event: any) => {\n    event.preventDefault();\n    const name = this.state.search.inputValue;\n\n    if (!name) {\n      this.getContactAll();\n    } else {\n      this.getContactByName(name);\n    }\n  };\n\n  render() {\n    const { inputValue } = this.state.search;\n\n    return (\n      <section>\n        <Search\n          inputValue={inputValue}\n          onSubmit={(event: any) => this.handleSearchSubmit(event)}\n          inputChange={(event: any) => this.handleSearchChange(event)}\n          showButton={false}\n        />\n        <Pets pets={this.state.pets} />\n      </section>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\n\ninterface Props {\n  field: string;\n  label: string;\n  value: string;\n  className: string;\n  type: 'text' | 'checkbox' | 'radio' | 'email' | 'password' | string;\n  checked?: boolean;\n  onChange: (e: any) => void;\n}\n\nconst InputGroup = ({\n  field,\n  label,\n  value,\n  onChange,\n  className,\n  checked,\n  type = 'text'\n}: Props) => {\n  return (\n    <div className={`form-field ${className}`}>\n      <label className=\"label\" htmlFor={field}>\n        {label}\n      </label>\n\n      <input\n        className=\"input-text js-input\"\n        name={field}\n        type={type}\n        value={value}\n        checked={checked}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default InputGroup;\n","import { SelectInterface } from '../Interfaces/Select/index.interface';\n\nexport const options: SelectInterface[] = [\n  { value: 'SMALL', label: 'Pequeno 6kg - 15kg' },\n  { value: 'MEDIUM', label: 'Médio 15kg - 25kg' },\n  { value: 'LARGE', label: 'Grande 25kg -45kg' },\n  { value: 'XL', label: 'Gigante 45kg - 90kg' }\n];\n\nexport const coatLengthOptions: SelectInterface[] = [\n  { value: 'HAIRLESS', label: 'Sem pelagem' },\n  { value: 'SHORT', label: 'Pequeno' },\n  { value: 'MEDIUM', label: 'Médio' },\n  { value: 'LONG', label: 'Longo' }\n];\n\nexport const petRecommendedToOptions: SelectInterface[] = [\n  { value: 'KIDS', label: 'Crianças' },\n  { value: 'OLD_MAN', label: 'Idosos' },\n  { value: 'DEFICIENT', label: 'Pessoas Especiais' },\n  { value: 'ALL', label: 'Todos' }\n];\n\nexport const petTypeOptions: SelectInterface[] = [\n  { value: 'CAT', label: 'Gato' },\n  { value: 'DOG', label: 'Cachorro' }\n];\n\nexport const genreOptions: SelectInterface[] = [\n  { value: 'M', label: 'Macho' },\n  { value: 'F', label: 'Fêmea' }\n];\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Select from 'react-select';\n\nimport { HOME } from '../../../helpers/urls';\nimport './index.css';\nimport InputGroup from '../../../components/InputGroup';\nimport {\n  options,\n  coatLengthOptions,\n  petRecommendedToOptions,\n  petTypeOptions,\n  genreOptions\n} from '../../../helpers/select';\n\nclass ContactForm extends Component {\n  state = {\n    form: {\n      name: '',\n      age: '',\n      breed: '',\n      description: '',\n      urlImage: '',\n      bloodType: '',\n      coatLength: 'HAIRLESS',\n      color: '',\n      petRecommendedTo: 'KIDS',\n      petSize: 'SMALL',\n      disease: false,\n      vaccinated: false,\n      petType: 'CAT',\n      genre: 'M',\n      user: {\n        id: 91\n      }\n    },\n    selectedOption: {\n      petSize: options[0],\n      coatLength: coatLengthOptions[0],\n      petRecommendedTo: petRecommendedToOptions[0],\n      petType: petTypeOptions[0],\n      genre: genreOptions[0]\n    },\n    redirect: false\n  };\n\n  submitHandler = (e: any) => {\n    e.preventDefault();\n\n    console.log(this.state.form);\n    fetch('https://ancient-fortress-81160.herokuapp.com/api/contacts', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(this.state.form)\n    })\n      .then(() => this.setState({ redirect: true }))\n      .catch(error => console.log(error));\n  };\n\n  changeHandler = async (event: any) => {\n    event.persist();\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    const { form } = this.state;\n\n    // @ts-ignore\n    form[name] = value;\n\n    await this.setState(form);\n  };\n\n  handleInputs = () => {\n    const { form } = this.state;\n\n    const FIELDS = [\n      {\n        label: 'Nome',\n        field: 'name',\n        value: form.name,\n        type: 'text'\n      },\n      {\n        label: 'Idade',\n        field: 'age',\n        value: form.age,\n        type: 'number'\n      },\n      {\n        label: 'Raça',\n        field: 'breed',\n        value: form.breed,\n        type: 'text'\n      },\n      {\n        label: 'Link da foto',\n        field: 'urlImage',\n        value: form.urlImage,\n        type: 'text'\n      },\n      {\n        label: 'Tipo Sanguíneo',\n        field: 'bloodType',\n        value: form.bloodType,\n        type: 'text'\n      },\n      {\n        label: 'Cor',\n        field: 'color',\n        value: form.color,\n        type: 'text'\n      },\n      {\n        label: 'Possui Doença',\n        field: 'disease',\n        value: form.disease,\n        type: 'checkbox'\n      },\n      {\n        label: 'Vacinado',\n        field: 'vaccinated',\n        value: form.vaccinated,\n        type: 'checkbox'\n      }\n    ];\n\n    return FIELDS.map((item, index) => (\n      <InputGroup\n        key={index}\n        className=\"col-xs-12 col-lg-4\"\n        field={item.field}\n        label={item.label}\n        // @ts-ignore\n        value={item.value}\n        // @ts-ignore\n        checked={item.value}\n        type={item.type}\n        onChange={this.changeHandler}\n      />\n    ));\n  };\n\n  handleSelectChange = async (selectedOption: any, field: any) => {\n    await this.setState(\n      { form: { ...this.state.form, [field]: selectedOption.value } },\n      () => console.log(`Option selected:`, selectedOption)\n    );\n\n    await this.setState({\n      selectedOption: {\n        ...this.state.selectedOption,\n        [field]: selectedOption\n      }\n    });\n\n    console.log(this.state);\n  };\n\n  render() {\n    const { redirect, form, selectedOption } = this.state;\n\n    if (redirect) {\n      return <Redirect to={HOME} />;\n    }\n\n    return (\n      <section className=\"get-in-touch\">\n        <form\n          className=\"contact-form row\"\n          onSubmit={e => this.submitHandler(e)}\n        >\n          <div className=\"col-12 c-info-box\">\n            <h1>\n              Criar um novo <strong> Pet</strong>\n            </h1>\n          </div>\n\n          {this.handleInputs()}\n\n          <div className=\"form-field col-12 col-lg-4\">\n            <label className=\"label\">Pelagem</label>\n            <Select\n              value={selectedOption.coatLength}\n              onChange={(value: any) =>\n                this.handleSelectChange(value, 'coatLength')\n              }\n              options={coatLengthOptions}\n            />\n          </div>\n\n          <div className=\"form-field col-12 col-lg-4\">\n            <label className=\"label\">Porte</label>\n            <Select\n              value={selectedOption.petSize}\n              onChange={(value: any) =>\n                this.handleSelectChange(value, 'petSize')\n              }\n              options={options}\n            />\n          </div>\n\n          <div className=\"form-field col-12 col-lg-4\">\n            <label className=\"label\">Recomendado Para</label>\n            <Select\n              value={selectedOption.petRecommendedTo}\n              onChange={(value: any) =>\n                this.handleSelectChange(value, 'petRecommendedTo')\n              }\n              options={petRecommendedToOptions}\n            />\n          </div>\n\n          <div className=\"form-field col-xs-12 col-lg-4\">\n            <label className=\"label\">Tipo Pet</label>\n            <Select\n              value={selectedOption.petType}\n              onChange={(value: any) =>\n                this.handleSelectChange(value, 'petType')\n              }\n              options={petTypeOptions}\n            />\n          </div>\n\n          <div className=\"form-field col-xs-12 col-lg-4\">\n            <label className=\"label\">Gênero</label>\n            <Select\n              value={selectedOption.genre}\n              onChange={(value: any) => this.handleSelectChange(value, 'genre')}\n              options={genreOptions}\n            />\n          </div>\n\n          <div className=\"form-field col-xs-12 col-lg-12\">\n            <label className=\"label c-label-desc\">Sobre o pet</label>\n            <textarea\n              className=\"form-field input-text js-input c-description-info\"\n              name=\"description\"\n              value={form.description}\n              onChange={this.changeHandler}\n            />\n          </div>\n\n          <div className=\"form-field col-12 c-submit-box\">\n            <button type=\"submit\" className=\"submit-btn\">\n              Salvar\n            </button>\n          </div>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React, { Component } from 'react';\n\nimport { HOME } from '../../../helpers/urls';\nimport { Redirect } from 'react-router-dom';\n\nimport './index.css';\n\nimport {\n  options,\n  coatLengthOptions,\n  petRecommendedToOptions,\n  genreOptions\n} from '../../../helpers/select';\nimport { SelectInterface } from '../../../Interfaces/Select/index.interface';\n\nconst componentClassName = 'contact-info';\n\nclass InfoPage extends Component {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      info: {\n        name: '',\n        age: '',\n        breed: '',\n        description: '',\n        urlImage: '',\n        bloodType: '',\n        coatLength: '',\n        color: '',\n        petRecommendedTo: '',\n        petSize: '',\n        disease: false,\n        vaccinated: false,\n        petType: '',\n        genre: ''\n      },\n      redirect: false\n    };\n  }\n\n  componentDidMount() {\n    this.getContactById();\n  }\n\n  getContactById() {\n    // @ts-ignore\n    const { id } = this.props.match.params;\n\n    fetch(`https://ancient-fortress-81160.herokuapp.com/api/contacts/${id}`)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ info: data });\n      })\n      .catch(console.log);\n  }\n\n  deleteContact = () => {\n    // @ts-ignore\n    const { id } = this.props.match.params;\n    fetch(`https://ancient-fortress-81160.herokuapp.com/api/contacts/${id}`, {\n      method: 'DELETE'\n    })\n      .then(() => this.setState({ redirect: true }))\n      .catch(error => console.log(error));\n  };\n\n  handleOptions = (\n    value: string,\n    listOptions: SelectInterface[]\n  ): SelectInterface => {\n    const defaultValue = {\n      value: '',\n      label: ''\n    };\n\n    if (!value) {\n      return defaultValue;\n    }\n\n    return listOptions.find(item => item.value === value) || defaultValue;\n  };\n\n  render() {\n    // @ts-ignore\n    const { info, redirect } = this.state;\n\n    if (redirect) {\n      return <Redirect to={HOME} />;\n    }\n\n    return (\n      <section className=\"container\">\n        <div className={`${componentClassName}`}></div>\n\n        <div className=\"col-12 c-detail-box\">\n          <img\n            src={info.urlImage}\n            alt=\"\"\n            className={`${componentClassName}__image`}\n          />\n\n          <h1>\n            {info.petType === 'CAT' ? 'Miaau ' : 'Au Au '}eu sou\n            {info.genre === 'M' ? ' o ' : ' a '} <strong>{info.name} !</strong>\n          </h1>\n        </div>\n\n        <div className=\"col-12 row\">\n          <div className=\"col-4\">\n            <strong>Raça: </strong>\n            {info.breed}\n          </div>\n\n          <div className=\"col-4\">\n            <strong>Idade: </strong>\n            {info.age > 1 ? info.age + ' anos ' : info.age + ' ano '}\n          </div>\n\n          <div className=\"col-4\">\n            <strong>Gênero: </strong>\n            {this.handleOptions(info.genre, genreOptions).label}\n          </div>\n\n          <div className=\"col-4\">\n            <strong>Cor: </strong>\n            {info.color}\n          </div>\n\n          <div className=\"col-4\">\n            <strong>Possui Doença: </strong>\n            {info.disease === true ? 'Sim' : 'Não'}\n          </div>\n\n          <div className=\"col-4\">\n            <strong>Tipo Sanguíneo: </strong>\n            {info.bloodType}\n          </div>\n\n          <div className=\"col-4\">\n            <strong>Recomendado para: </strong>\n            {\n              this.handleOptions(info.petRecommendedTo, petRecommendedToOptions)\n                .label\n            }\n          </div>\n\n          <div className=\"col-4\">\n            <strong>Vacinado: </strong>\n            {info.vaccinated === true ? 'Sim' : 'Não'}\n          </div>\n\n          <div className=\"col-4\">\n            <strong>Pelagem: </strong>\n            {this.handleOptions(info.coatLength, coatLengthOptions).label}\n          </div>\n\n          <div className=\"col-4\">\n            <strong>Porte: </strong>\n            {this.handleOptions(info.petSize, options).label}\n          </div>\n\n          <div className=\"col-12 c-description-info\">\n            <strong>Sobre o pet: </strong>\n            {info.description}\n          </div>\n\n          <div className=\"container\">\n            <div className=\"col-12 row\">\n              <button\n                type=\"submit\"\n                onClick={this.deleteContact}\n                className=\"btn btn-danger\"\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default InfoPage;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Select from 'react-select';\n\nimport { HOME } from '../../../helpers/urls';\nimport './index.css';\nimport InputGroup from '../../../components/InputGroup';\n\nimport {\n  options,\n  coatLengthOptions,\n  petRecommendedToOptions,\n  petTypeOptions,\n  genreOptions\n} from '../../../helpers/select';\n\nconst componentClassName = 'contact-info';\n\nclass ContactEdit extends Component {\n  state = {\n    form: {\n      name: '',\n      age: '',\n      breed: '',\n      description: '',\n      urlImage: '',\n      bloodType: '',\n      coatLength: '',\n      color: '',\n      petRecommendedTo: '',\n      petSize: '',\n      disease: false,\n      vaccinated: false,\n      petType: '',\n      genre: ''\n    },\n    selectedOption: {\n      petSize: options[0],\n      coatLength: coatLengthOptions[0],\n      petRecommendedTo: petRecommendedToOptions[0],\n      petType: petTypeOptions[0],\n      genre: genreOptions[0]\n    },\n    redirect: false\n  };\n\n  submitHandler = (e: any) => {\n    e.preventDefault();\n\n    console.log(this.state.form);\n    fetch('https://ancient-fortress-81160.herokuapp.com/api/contacts', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(this.state.form)\n    })\n      .then(() => this.setState({ redirect: true }))\n      .catch(error => console.log(error));\n  };\n\n  changeHandler = async (event: any) => {\n    event.persist();\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    const { form } = this.state;\n\n    // @ts-ignore\n    form[name] = value;\n\n    await this.setState(form);\n  };\n\n  handleInputs = () => {\n    const { form } = this.state;\n\n    const FIELDS = [\n      {\n        label: 'Nome',\n        field: 'name',\n        value: form.name,\n        type: 'text'\n      },\n      {\n        label: 'Idade',\n        field: 'age',\n        value: form.age,\n        type: 'number'\n      },\n      {\n        label: 'Raça',\n        field: 'breed',\n        value: form.breed,\n        type: 'text'\n      },\n      {\n        label: 'Tipo Sanguíneo',\n        field: 'bloodType',\n        value: form.bloodType,\n        type: 'text'\n      },\n      {\n        label: 'Cor',\n        field: 'color',\n        value: form.color,\n        type: 'text'\n      },\n      {\n        label: 'Link da foto',\n        field: 'urlImage',\n        value: form.urlImage,\n        type: 'text',\n        className: 'c-image-url'\n      },\n      {\n        label: 'Possui Doença',\n        field: 'disease',\n        value: form.disease,\n        type: 'checkbox'\n      },\n      {\n        label: 'Vacinado',\n        field: 'vaccinated',\n        value: form.vaccinated,\n        type: 'checkbox'\n      }\n    ];\n\n    return FIELDS.map((item, index) => (\n      <InputGroup\n        key={index}\n        className={`${item.className ? item.className : ''} col-xs-12 col-lg-4`}\n        field={item.field}\n        label={item.label}\n        // @ts-ignore\n        value={item.value}\n        // @ts-ignore\n        checked={item.value}\n        type={item.type}\n        onChange={this.changeHandler}\n      />\n    ));\n  };\n\n  handleSelectChange = async (selectedOption: any, field: any) => {\n    await this.setState(\n      { form: { ...this.state.form, [field]: selectedOption.value } },\n      () => console.log(`Option selected:`, selectedOption)\n    );\n\n    await this.setState({\n      selectedOption: {\n        ...this.state.selectedOption,\n        [field]: selectedOption\n      }\n    });\n\n    console.log(this.state);\n  };\n\n  async componentDidMount() {\n    try {\n      // @ts-ignore\n      const id = this.props.match.params.id;\n\n      const response = await fetch(\n        `https://ancient-fortress-81160.herokuapp.com/api/contacts/${id}`,\n        {\n          method: 'GET',\n          headers: { 'Content-Type': 'application/json' }\n        }\n      );\n\n      const data = await response.json();\n\n      console.log(data);\n\n      const coatLength = await coatLengthOptions.find(\n        item => item.value === data.coatLength\n      );\n      const petSize = await options.find(item => item.value === data.petSize);\n      const petRecommendedTo = await petRecommendedToOptions.find(\n        item => item.value === data.petRecommendedTo\n      );\n\n      const petType = await petTypeOptions.find(\n        item => item.value === data.petType\n      );\n\n      const genre = await genreOptions.find(item => item.value === data.genre);\n\n      await this.setState({\n        form: { ...this.state.form, ...data, id },\n        selectedOption: {\n          coatLength,\n          petSize,\n          petRecommendedTo,\n          petType,\n          genre\n        }\n      });\n    } catch {\n      console.error('Deu Ruim');\n    }\n  }\n\n  render() {\n    const { redirect, form, selectedOption } = this.state;\n\n    if (redirect) {\n      return <Redirect to={HOME} />;\n    }\n\n    return (\n      <section className=\"get-in-touch\">\n        <form\n          className=\"contact-form row\"\n          onSubmit={e => this.submitHandler(e)}\n        >\n          <div className=\"col-12 c-info-box\">\n            <img\n              src={form.urlImage}\n              alt=\"\"\n              className={`${componentClassName}__image`}\n            />\n\n            <h1>\n              {form.petType === 'CAT' ? 'Miaau ' : 'Au Au '}eu sou\n              {form.genre === 'M' ? ' o ' : ' a '} <strong>{form.name}</strong>!\n            </h1>\n          </div>\n\n          {this.handleInputs()}\n\n          <div className=\"form-field col-12 col-lg-4\">\n            <label className=\"label\">Pelagem</label>\n            <Select\n              value={selectedOption.coatLength}\n              onChange={value => this.handleSelectChange(value, 'coatLength')}\n              options={coatLengthOptions}\n            />\n          </div>\n\n          <div className=\"form-field col-12 col-lg-4\">\n            <label className=\"label\">Porte</label>\n            <Select\n              value={selectedOption.petSize}\n              onChange={value => this.handleSelectChange(value, 'petSize')}\n              options={options}\n            />\n          </div>\n\n          <div className=\"form-field col-12 col-lg-4\">\n            <label className=\"label\">Recomendado Para</label>\n            <Select\n              value={selectedOption.petRecommendedTo}\n              onChange={value =>\n                this.handleSelectChange(value, 'petRecommendedTo')\n              }\n              options={petRecommendedToOptions}\n            />\n          </div>\n\n          <div className=\"form-field col-xs-12 col-lg-4\">\n            <label className=\"label\">Tipo Pet</label>\n            <Select\n              value={selectedOption.petType}\n              onChange={value => this.handleSelectChange(value, 'petType')}\n              options={petTypeOptions}\n            />\n          </div>\n\n          <div className=\"form-field col-xs-12 col-lg-4\">\n            <label className=\"label\">Gênero</label>\n            <Select\n              value={selectedOption.genre}\n              onChange={value => this.handleSelectChange(value, 'genre')}\n              options={genreOptions}\n            />\n          </div>\n\n          <div className=\"form-field col-xs-12 col-lg-12\">\n            <label className=\"label c-label-desc\">Sobre o pet</label>\n            <textarea\n              className=\"input-text js-input c-description-info\"\n              name=\"description\"\n              value={form.description}\n              onChange={this.changeHandler}\n            />\n          </div>\n\n          <div className=\"form-field col-12 c-submit-box\">\n            <button type=\"submit\" className=\"submit-btn\">\n              Salvar\n            </button>\n          </div>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default ContactEdit;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { HOME } from '../../helpers/urls';\nimport './index.css';\nimport InputGroup from '../../components/InputGroup';\n\nclass Login extends Component {\n  state = {\n    form: {\n      email: '',\n      password: ''\n    },\n    redirect: false,\n    invalidUser: true\n  };\n\n  changeHandler = (e: any) => {\n    e.persist();\n    let store = this.state;\n    // @ts-ignore\n    store.form[e.target.name] = e.target.value;\n\n    this.setState(store);\n  };\n\n  submitHandler = (e: any) => {\n    e.preventDefault();\n\n    console.log(this.state.form);\n    fetch('https://ancient-fortress-81160.herokuapp.com/api/users/login', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(this.state.form)\n    })\n      .then(response => {\n        if (response.status === 200) {\n          response.json().then(data => {\n            console.log(data);\n            this.setState({ redirect: true });\n          });\n        } else {\n          this.setState({ invalidUser: true });\n        }\n      })\n      .catch(error => console.log(error));\n  };\n\n  handleInputs = () => {\n    const { form } = this.state;\n\n    const FIELDS = [\n      {\n        label: 'Email',\n        field: 'email',\n        value: form.email,\n        type: 'email'\n      },\n      {\n        label: 'Senha',\n        field: 'password',\n        value: form.password,\n        type: 'password'\n      }\n    ];\n\n    return FIELDS.map((item, index) => (\n      <InputGroup\n        key={index}\n        className=\"col-xs-12 col-lg-12\"\n        field={item.field}\n        label={item.label}\n        value={item.value}\n        type={item.type}\n        onChange={this.changeHandler}\n      />\n    ));\n  };\n\n  render() {\n    const { redirect, invalidUser } = this.state;\n\n    if (redirect) {\n      return <Redirect to={HOME} />;\n    }\n\n    return (\n      <section className=\"get-in-touch login\">\n        {invalidUser ? (\n          <div className=\"col-lg-12 alert alert-danger\" role=\"alert\">\n            Usuário Invalido\n          </div>\n        ) : null}\n        <form\n          className=\"contact-form row\"\n          onSubmit={e => this.submitHandler(e)}\n        >\n          {this.handleInputs()}\n\n          <div className=\"form-field col-lg-12\">\n            <button type=\"submit\" className=\"submit-btn\">\n              Logar\n            </button>\n          </div>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { LOGIN } from '../../../helpers/urls';\nimport './index.css';\nimport InputGroup from '../../../components/InputGroup';\n\nclass CreateUser extends Component {\n  state = {\n    form: {\n      name: '',\n      email: '',\n      password: '',\n      address: {\n        country: 'Brasil',\n        state: '',\n        district: '',\n        city: '',\n        street: '',\n        number: '',\n        complements: ''\n      }\n    },\n    redirect: false\n  };\n\n  submitHandler = (e: any) => {\n    e.preventDefault();\n\n    console.log(this.state.form);\n    fetch('https://ancient-fortress-81160.herokuapp.com/api/users', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(this.state.form)\n    })\n      .then(() => this.setState({ redirect: true }))\n      .catch(error => console.log(error));\n  };\n\n  changeHandler = async (event: any) => {\n    event.persist();\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    const { form } = this.state;\n\n    // @ts-ignore\n    if (form[name] !== undefined) {\n      // @ts-ignore\n      form[name] = value;\n    } else {\n      // @ts-ignore\n      form.address[name] = value;\n    }\n\n    await this.setState(form);\n  };\n\n  handleInputs = () => {\n    const { form } = this.state;\n\n    const FIELDS = [\n      {\n        label: 'Nome',\n        field: 'name',\n        value: form.name,\n        type: 'text'\n      },\n      {\n        label: 'E-mail',\n        field: 'email',\n        value: form.email,\n        type: 'text'\n      },\n      {\n        label: 'Senha',\n        field: 'password',\n        value: form.password,\n        type: 'password'\n      },\n      {\n        label: 'Estado',\n        field: 'state',\n        value: form.address.state,\n        type: 'text'\n      },\n      {\n        label: 'Cidade',\n        field: 'city',\n        value: form.address.city,\n        type: 'text'\n      },\n      {\n        label: 'Bairro',\n        field: 'district',\n        value: form.address.district,\n        type: 'text'\n      },\n      {\n        label: 'Rua',\n        field: 'street',\n        value: form.address.street,\n        type: 'text'\n      },\n      {\n        label: 'Número',\n        field: 'number',\n        value: form.address.number,\n        type: 'text'\n      },\n      {\n        label: 'Complemento',\n        field: 'complements',\n        value: form.address.complements,\n        type: 'text'\n      }\n    ];\n\n    return FIELDS.map((item, index) => (\n      <InputGroup\n        key={index}\n        className=\"col-xs-12 col-lg-4\"\n        field={item.field}\n        label={item.label}\n        value={item.value}\n        type={item.type}\n        onChange={this.changeHandler}\n      />\n    ));\n  };\n\n  render() {\n    const { form, redirect } = this.state;\n\n    if (redirect) {\n      return <Redirect to={LOGIN} />;\n    }\n\n    return (\n      <section className=\"get-in-touch\">\n        <form\n          className=\"contact-form row\"\n          onSubmit={e => this.submitHandler(e)}\n        >\n          <div className=\"col-12 c-info-box\">\n            <h1>\n              Criar uma nova <strong> Conta</strong>\n            </h1>\n          </div>\n\n          {this.handleInputs()}\n\n          <div className=\"form-field col-12 c-submit-box\">\n            <button type=\"submit\" className=\"submit-btn\">\n              Cadastrar\n            </button>\n          </div>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default CreateUser;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './index.css';\nimport { EDIT_USER } from '../../../../helpers/urls';\nimport { UserInterface } from '../../../../Interfaces/Users/index.interface';\n\nconst disableUser = () => {\n  console.log('Desativar Usuário teste');\n};\n\ninterface Props {\n  users: UserInterface[];\n}\n\nconst Users = ({ users }: Props) => {\n  return (\n    <section className=\"get-in-touch\">\n      <div className=\"col-12 c-title-box\">\n        <h1>\n          Gerenciamento de <strong> Usuários</strong>\n        </h1>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">ID</th>\n                <th scope=\"col\">Nome</th>\n                <th scope=\"col\">E-mail</th>\n                <th scope=\"col\">Tipo</th>\n                <th scope=\"col\">Editar</th>\n                <th scope=\"col\">Desativar</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {users.map((user, index) => {\n                const { id, name, email, userType } = user;\n\n                return (\n                  <tr key={index}>\n                    <td>{id}</td>\n                    <td>{name}</td>\n                    <td>{email}</td>\n                    <td>{userType === 'COMMON' ? 'Comum' : 'Admin'}</td>\n                    <td>\n                      <Link to={`${EDIT_USER}/${id}`}> Editar </Link>\n                    </td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-danger\"\n                        onClick={disableUser}\n                      >\n                        Desativar\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Users;\n","import React, { Component } from 'react';\nimport Users from './Users';\n\nclass UserManagement extends Component {\n  state = {\n    users: []\n  };\n\n  componentDidMount() {\n    fetch('https://ancient-fortress-81160.herokuapp.com/api/users')\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ users: data });\n      })\n      .catch(console.log);\n  }\n\n  render() {\n    return <Users users={this.state.users} />;\n  }\n}\n\nexport default UserManagement;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { HOME } from '../../../helpers/urls';\nimport InputGroup from '../../../components/InputGroup';\n\nimport './index.css';\n\nclass UserEdit extends Component {\n  state = {\n    form: {\n      name: '',\n      email: '',\n      password: '',\n      address: {\n        country: '',\n        state: '',\n        city: '',\n        district: '',\n        street: '',\n        number: '',\n        complements: ''\n      }\n    },\n    redirect: false\n  };\n\n  submitHandler = (e: any) => {\n    e.preventDefault();\n\n    console.log(this.state.form);\n    fetch('https://ancient-fortress-81160.herokuapp.com/api/users', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(this.state.form)\n    })\n      .then(() => this.setState({ redirect: true }))\n      .catch(error => console.log(error));\n  };\n\n  changeHandler = async (event: any) => {\n    event.persist();\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    const { form } = this.state;\n\n    // @ts-ignore\n    if (form[name] !== undefined) {\n      // @ts-ignore\n      form[name] = value;\n    } else {\n      // @ts-ignore\n      form.address[name] = value;\n    }\n\n    await this.setState(form);\n  };\n\n  handleInputs = () => {\n    const { form } = this.state;\n\n    const FIELDS = [\n      {\n        label: 'Nome',\n        field: 'name',\n        value: form.name,\n        type: 'text'\n      },\n      {\n        label: 'E-mail',\n        field: 'email',\n        value: form.email,\n        type: 'text'\n      },\n      {\n        label: 'Senha',\n        field: 'password',\n        value: form.password,\n        type: 'password'\n      },\n      {\n        label: 'Estado',\n        field: 'state',\n        value: form.address.state,\n        type: 'text'\n      },\n      {\n        label: 'Cidade',\n        field: 'city',\n        value: form.address.city,\n        type: 'text'\n      },\n      {\n        label: 'Bairro',\n        field: 'district',\n        value: form.address.district,\n        type: 'text'\n      },\n      {\n        label: 'Rua',\n        field: 'street',\n        value: form.address.street,\n        type: 'text'\n      },\n      {\n        label: 'Número',\n        field: 'number',\n        value: form.address.number,\n        type: 'text'\n      },\n      {\n        label: 'Complemento',\n        field: 'complements',\n        value: form.address.complements,\n        type: 'text'\n      }\n    ];\n\n    return FIELDS.map((item, index) => (\n      <InputGroup\n        key={index}\n        className=\"col-xs-12 col-lg-4\"\n        field={item.field}\n        label={item.label}\n        value={item.value}\n        type={item.type}\n        onChange={this.changeHandler}\n      />\n    ));\n  };\n\n  async componentDidMount() {\n    try {\n      // @ts-ignore\n      const id = this.props.match.params.id;\n\n      const response = await fetch(\n        `https://ancient-fortress-81160.herokuapp.com/api/users/${id}`,\n        {\n          method: 'GET',\n          headers: { 'Content-Type': 'application/json' }\n        }\n      );\n\n      const data = await response.json();\n\n      console.log(data);\n\n      await this.setState({\n        form: { ...this.state.form, ...data, id }\n      });\n    } catch {\n      console.error('Deu Ruim');\n    }\n  }\n\n  render() {\n    const { redirect, form } = this.state;\n\n    if (redirect) {\n      return <Redirect to={HOME} />;\n    }\n\n    return (\n      <section className=\"get-in-touch\">\n        <form\n          className=\"contact-form row\"\n          onSubmit={e => this.submitHandler(e)}\n        >\n          {this.handleInputs()}\n\n          <div className=\"form-field col-12 c-submit-box\">\n            <button type=\"submit\" className=\"submit-btn\">\n              Salvar\n            </button>\n          </div>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default UserEdit;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport ContactForm from './pages/Pets/Create';\nimport InfoPage from './pages/Pets/Info';\nimport ContactEdit from './pages/Pets/Edit';\nimport Login from './pages/Login';\nimport CreateUser from './pages/Users/Create';\nimport UserManagement from './pages/Users/List';\nimport UserEdit from './pages/Users/Edit';\n\nimport {\n  INFO,\n  HOME,\n  CREATE,\n  EDIT,\n  LOGIN,\n  CREATE_USER,\n  USER_MANAGEMENT,\n  EDIT_USER\n} from './helpers/urls';\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path={HOME} component={Home} />\n      <Route exact path={`${INFO}/:id`} component={InfoPage} />\n      <Route exact path={CREATE} component={ContactForm} />\n      <Route exact path={`${EDIT}/:id`} component={ContactEdit} />\n      <Route exact path={LOGIN} component={Login} />\n      <Route exact path={CREATE_USER} component={CreateUser} />\n      <Route exact path={USER_MANAGEMENT} component={UserManagement} />\n\n      <Route exact path={`${EDIT_USER}/:id`} component={UserEdit} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  CREATE,\n  HOME,\n  LOGIN,\n  LOGOUT,\n  CREATE_USER,\n  USER_MANAGEMENT\n} from '../../helpers/urls';\n\nconst Menu = () => {\n  const [isMenuMobileOpen, setIsMenuMobileOpen] = useState(false);\n\n  const toggleMenu = (): void => setIsMenuMobileOpen(!isMenuMobileOpen);\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light \">\n      <Link className=\"navbar-brand\" to=\"/\">\n        My Pet\n      </Link>\n\n      <button\n        className={`navbar-toggler ${isMenuMobileOpen ? '' : 'collapsed'}`}\n        onClick={() => toggleMenu()}\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div\n        className={`collapse navbar-collapse  ${\n          isMenuMobileOpen ? 'show' : ''\n        }`}\n        id=\"navbarNav\"\n      >\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item active\">\n            <Link className=\"nav-link\" to={HOME}>\n               início \n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={CREATE}>\n               Criar Pets \n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={CREATE_USER}>\n              Criar Usuário{' '}\n            </Link>\n          </li>\n\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={USER_MANAGEMENT}>\n              Gerenciar Usuário{' '}\n            </Link>\n          </li>\n\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={LOGIN}>\n              Entrar\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={LOGOUT}>\n               Sair \n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Menu;\n","import React from 'react';\nimport Routes from './Routes';\nimport Menu from './components/Menu';\n\nconst App = () => {\n  return (\n    <>\n      <Menu />\n      <Routes />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}